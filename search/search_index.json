{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83e\uddf0 Custom Ubuntu ISO Creation with Cubic","text":"<p>Author: Shadil A.M Focus: Building a custom Ubuntu-based distribution using Cubic (Custom Ubuntu ISO Creator)</p>"},{"location":"#what-is-cubic","title":"\ud83d\ude80 What Is Cubic?","text":"<p>Cubic (Custom Ubuntu ISO Creator) is a graphical tool for creating custom Ubuntu Live ISOs. It provides a chroot environment where you can:</p> <ul> <li>Modify packages and system files</li> <li>Pre-install applications</li> <li>Customize themes, wallpapers, and user defaults</li> <li>Tweak boot options and preseed configuration</li> <li>Build a ready-to-install ISO for distribution or deployment</li> </ul> <p>In short \u2014 it\u2019s the easiest way to remaster Ubuntu visually without terminal complexity.</p>"},{"location":"#what-you-can-do-with-cubic","title":"\ud83e\udde9 What You Can Do with Cubic","text":"Capability Description Add/Remove Packages Install apps via <code>apt</code>, remove unwanted packages Change UI Customize desktop themes, icons, wallpaper Pre-configure Settings Add <code>.bashrc</code>, <code>skel</code> files, defaults for users Add Scripts or Services Autostart apps, run setup scripts Embed Drivers Include Wi-Fi/GPU/firmware drivers in ISO Offline Installation Build fully self-contained ISO with dependencies"},{"location":"#how-to-install-cubic","title":"\u2699\ufe0f How to Install Cubic","text":"<pre><code>sudo add-apt-repository ppa:cubic-wizard/release\nsudo apt update\nsudo apt install cubic\n</code></pre> <p>Launch via Applications \u2192 Cubic, or:</p> <pre><code>cubic\n</code></pre>"},{"location":"#how-the-process-works","title":"\ud83e\udde0 How the Process Works","text":"<ol> <li> <p>Start Cubic</p> </li> <li> <p>Choose a project directory (e.g., <code>~/cubic/mydistro</code>)</p> </li> <li> <p>Select a base Ubuntu ISO (e.g., <code>ubuntu-24.04-desktop.iso</code>)</p> </li> <li> <p>Enter Chroot Environment</p> </li> <li> <p>Cubic opens a terminal inside the extracted ISO filesystem</p> </li> <li> <p>You can install packages, edit configs, add scripts, etc.</p> </li> <li> <p>Customize and Exit</p> </li> <li> <p>Modify <code>/etc/issue</code>, <code>/usr/share/backgrounds/</code>, <code>skel/</code>, etc.</p> </li> <li> <p>Exit the terminal when done</p> </li> <li> <p>ISO Settings</p> </li> <li> <p>Update boot menu text, kernel options, and compression format</p> </li> <li> <p>Build ISO</p> </li> <li> <p>Cubic packages your customizations into a new bootable ISO</p> </li> </ol>"},{"location":"#comparison-cubic-vs-other-remaster-tools","title":"\ud83e\udde9 Comparison: Cubic vs Other Remaster Tools","text":"Feature Cubic (Ubuntu) Penguin\u2019s Eggs (Debian/Arch) Customizer (Old) ArchISO (Arch) GUI Support \u2705 Full GUI \u2705 CLI + partial GUI \u26a0\ufe0f Deprecated \u274c CLI only Base OS Ubuntu / Debian Debian / Arch / Devuan Ubuntu Arch Linux Chroot Editing \u2705 Built-in \u2705 Shell based \u2705 Yes \u2705 Yes Bootloader Editing \u2705 Easy GUI \u26a0\ufe0f Manual \u26a0\ufe0f Partial \u2705 Manual ISO Compression (SquashFS) \u2705 Yes \u2705 Yes \u2705 Yes \u2705 Yes Offline Mode \u2705 Yes \u2705 Yes \u26a0\ufe0f Partial \u26a0\ufe0f Advanced Beginner Friendly \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50 \u2b50 \u2b50 Ideal Use Custom Ubuntu spins Multi-distro remaster Legacy Power users"},{"location":"chroot/","title":"Chroot","text":""},{"location":"chroot/#what-is-chroot-and-why-cubic-uses-it","title":"\ud83e\udde9 What Is <code>chroot</code> and Why Cubic Uses It","text":"<p><code>chroot</code> stands for \u201cchange root\u201d. It is a Linux/Unix operation that changes the apparent root directory (<code>/</code>) for a process and its children. In other words, the process sees a different directory tree as its root, isolated from the rest of the system.</p>"},{"location":"chroot/#key-points","title":"Key Points:","text":"<ol> <li> <p>Purpose of <code>chroot</code></p> </li> <li> <p>Creates an isolated environment for safely modifying a filesystem.</p> </li> <li> <p>Any changes inside the <code>chroot</code> do not affect the host OS.</p> </li> <li> <p>Why Cubic Uses <code>chroot</code></p> </li> <li> <p>When customizing an Ubuntu ISO, Cubic extracts the ISO filesystem and opens a chroot shell inside it.</p> </li> <li> <p>This allows you to:</p> <ul> <li>Install or remove packages</li> <li>Modify system configuration</li> <li>Add applications or extensions</li> <li>Test scripts</li> <li>All changes are confined to the custom ISO and do not affect your running system.</li> </ul> </li> <li> <p>Advantages of Using <code>chroot</code></p> </li> <li> <p>Safe experimentation without risking the host OS.</p> </li> <li>Full root privileges inside the ISO environment.</li> <li> <p>Can replicate the environment the user will see when booting the ISO.</p> </li> <li> <p>Common Usage in Cubic</p> </li> <li> <p>Enter the chroot via the Cubic GUI terminal.</p> </li> <li>Run commands as if you were on a live Ubuntu system.</li> <li>Exit the chroot once customization is done, then build the final ISO.</li> </ol>"},{"location":"chroot/#example","title":"Example:","text":"<pre><code># Inside Cubic terminal (chroot)\napt update\napt install firefox gnome-tweaks\n</code></pre> <p>This installs packages inside the ISO, not on your host system.</p>"},{"location":"custom-root/","title":"Overview","text":""},{"location":"custom-root/#using-custom-root-directly-in-cubic-projects","title":"\ud83d\uddc2 Using <code>custom-root</code> Directly in Cubic Projects","text":"<p>When you create a Cubic project, all modifications to the ISO are stored in the <code>custom-root</code> folder. This folder represents the entire filesystem of your custom ISO, and you can interact with it directly without entering the virtual chroot environment.</p> <p>Many users, especially for tasks like adding wallpapers, copying GNOME extensions, or editing configuration files, find it more convenient to work directly in the file system instead of using the Cubic terminal or chroot environment.</p>"},{"location":"custom-root/#1-why-work-directly-in-custom-root","title":"1\ufe0f\u20e3 Why Work Directly in <code>custom-root</code>","text":"<ul> <li> <p>Visibility &amp; Comfort: You can browse folders using your file manager or IDE, which is often faster and easier than navigating the virtual chroot terminal.</p> </li> <li> <p>Direct Copy &amp; Paste: Adding files like wallpapers or extensions is as simple as dragging and dropping into the appropriate folders:</p> </li> <li> <p>Wallpapers \u2192 <code>custom-root/usr/share/backgrounds/</code></p> </li> <li>Extensions \u2192 <code>custom-root/usr/share/gnome-shell/extensions/</code></li> <li> <p>Applications \u2192 <code>custom-root/usr/share/applications/</code></p> </li> <li> <p>Avoid Chroot Complexity: Some users prefer this approach because it eliminates the need to learn chroot commands or deal with environment-specific limitations.</p> </li> </ul>"},{"location":"custom-root/#2-permissions-and-ownership","title":"2\ufe0f\u20e3 Permissions and Ownership","text":"<p>By default, <code>custom-root</code> files may be owned by root or have restricted permissions, preventing you from modifying them directly. To fix this:</p> <ol> <li>Change ownership to your user:</li> </ol> <pre><code>sudo chown -R $(whoami):$(whoami) /path/to/custom-root\n</code></pre> <ol> <li>Grant full permissions (read, write, execute) recursively:</li> </ol> <pre><code>sudo chmod -R 777 /path/to/custom-root\n</code></pre> <p>Explanation of Commands:</p> Command Purpose <code>chown -R $(whoami):$(whoami)</code> Makes your user the owner of all files and folders recursively (<code>-R</code>). <code>chmod -R 777</code> Grants read, write, execute permissions to all users on all files and directories recursively."},{"location":"custom-root/#3-workflow-using-custom-root","title":"3\ufe0f\u20e3 Workflow Using <code>custom-root</code>","text":"<ol> <li>Open <code>custom-root</code> in your file manager or IDE.</li> <li> <p>Copy or edit files directly:</p> </li> <li> <p>Wallpapers \u2192 <code>/usr/share/backgrounds/</code></p> </li> <li>Extensions \u2192 <code>/usr/share/gnome-shell/extensions/</code></li> <li>Application <code>.desktop</code> files \u2192 <code>/usr/share/applications/</code></li> <li> <p>If files are locked:</p> </li> <li> <p>Open a terminal.</p> </li> <li>Run the <code>chown</code> and <code>chmod</code> commands above.</li> <li>After modifications, you can re-enter Cubic and continue building the ISO.</li> <li>Cubic will include all changes made directly in <code>custom-root</code> during the ISO build process.</li> </ol>"},{"location":"custom-root/#4-advantages-of-direct-editing","title":"4\ufe0f\u20e3 Advantages of Direct Editing","text":"<ul> <li>Faster for bulk operations like copying multiple extensions or wallpapers.</li> <li>Full visibility into the filesystem structure.</li> <li>No need to repeatedly enter/exit chroot, saving time.</li> <li>Works seamlessly with all other Cubic customization steps (GRUB edits, ISO compression, branding, etc.).</li> </ul>"},{"location":"custom-root/#5-important-notes","title":"5\ufe0f\u20e3 Important Notes","text":"<ul> <li>Always backup your <code>custom-root</code> folder before making massive changes.</li> <li>Avoid accidentally modifying system-critical files like <code>/boot</code> unless necessary.</li> <li>After finishing your edits, verify all permissions are correct and that no files are missing or misconfigured.</li> </ul>"},{"location":"legal_rule/","title":"Legal Considerations","text":""},{"location":"legal_rule/#legal-guidelines-for-creating-ubuntu-derived-distributions","title":"\u2696\ufe0f Legal Guidelines for Creating Ubuntu-Derived Distributions","text":""},{"location":"legal_rule/#1-base-system-usage","title":"1\ufe0f\u20e3 Base System Usage","text":"<ul> <li>You may use Ubuntu servers and mirrors to obtain packages.</li> <li>Binary compatibility with Ubuntu is acceptable.</li> <li>If your distribution grows, consider hosting your own repository or partial mirrors.</li> <li>Always check the mirror\u2019s usage policy before heavy redistribution.</li> </ul> <p>Reference: Matt Zimmerman \u2013 Ubuntu Devel Mailing Lists (2006\u20132007)</p>"},{"location":"legal_rule/#2-trademarks-and-branding","title":"2\ufe0f\u20e3 Trademarks and Branding","text":"<ul> <li>Do not use the Ubuntu name or logos in your branding, ISO, or splash screens.</li> <li>Avoid naming your derivative \u201cUbuntu Something\u201d or \u201cLubuntu Remix\u201d.</li> <li>You may state: <code>\"MyDistro, based on Ubuntu\"</code> to give credit.</li> </ul> <p>Actions:</p> <ul> <li>Replace logos in packages (e.g., Ubiquity installer) with your own.</li> <li>Replace GRUB splash and Plymouth themes for a custom boot experience.</li> <li>Avoid Ubuntu-branded wallpapers in live CD ISO.</li> </ul>"},{"location":"legal_rule/#3-system-identification-files","title":"3\ufe0f\u20e3 System Identification Files","text":"<p>Ubuntu uses several files to identify the system. For legal compliance:</p> File Recommendation <code>/etc/lsb-release</code> Change <code>DISTRIB_DESCRIPTION</code> to your distro name; leave <code>DISTRIB_ID=Ubuntu</code> if necessary for compatibility. <code>/etc/os-release</code> Update <code>PRETTY_NAME</code> and <code>NAME</code> to reflect your distribution. <p>This prevents automated tools from falsely attributing your derivative as official Ubuntu.</p>"},{"location":"legal_rule/#4-default-user-names","title":"4\ufe0f\u20e3 Default User Names","text":"<ul> <li>Ubuntu Live CD default user is <code>\"ubuntu\"</code>.  </li> <li>Change it to a neutral name or your distro name (e.g., <code>\"coder\"</code>, <code>\"user\"</code>).  </li> <li>In modern Ubuntu releases, the live user name can be derived from <code>.disk/info</code>.</li> </ul>"},{"location":"legal_rule/#5-package-names-and-licenses","title":"5\ufe0f\u20e3 Package Names and Licenses","text":"<ul> <li>Package version strings like <code>1.4.4-0ubuntu1</code> do not require renaming.  </li> <li>Respect the licenses of all included software; most Ubuntu packages are under GPL, MIT, Apache, or similar permissive licenses.  </li> <li>If your derivative includes proprietary packages, ensure you comply with their licensing terms.</li> </ul>"},{"location":"legal_rule/#6-logos-embedded-in-packages","title":"6\ufe0f\u20e3 Logos Embedded in Packages","text":"<ul> <li>Many applications (installers, menus, etc.) include Ubuntu branding.</li> <li> <p>Options:</p> </li> <li> <p>Replace logos with your own images.</p> </li> <li>Obtain explicit permission from Canonical (rarely granted for unofficial derivatives).</li> </ul> <p>Example: Replace Ubiquity installer logo in <code>usr/share/pixmaps/</code> or relevant Plymouth themes.</p>"},{"location":"legal_rule/#7-plymouth-grub-splash-images","title":"7\ufe0f\u20e3 Plymouth &amp; GRUB Splash Images","text":"<ul> <li>Plymouth theme controls boot animation; GRUB controls boot menu splash.</li> <li> <p>For legal compliance:</p> </li> <li> <p>Remove Ubuntu-specific branding (<code>--quiet splash</code> in GRUB) for live boot.</p> </li> <li>Replace Plymouth themes with your own graphics.</li> <li>Ensure branding is consistent with your derivative across live CD and installed system.</li> </ul>"},{"location":"legal_rule/#8-contribution-feedback","title":"8\ufe0f\u20e3 Contribution &amp; Feedback","text":"<ul> <li>Ubuntu encourages derivatives to contribute bug fixes, translations, and patches back to upstream.  </li> <li> <p>Examples:</p> </li> <li> <p>Reporting critical bugs upstream.</p> </li> <li>Submitting patches for libraries, themes, or installer improvements.</li> <li>Translating software into additional languages.</li> </ul> <p>This ensures the ecosystem remains healthy and derivative distros are seen as cooperative.</p>"},{"location":"legal_rule/#9-existing-ubuntu-derivatives","title":"9\ufe0f\u20e3 Existing Ubuntu Derivatives","text":"<p>Some derivatives provide useful reference points:</p> <ul> <li>Kubuntu \u2013 official flavor with KDE</li> <li>Xubuntu \u2013 official flavor with XFCE</li> <li>Edubuntu \u2013 education-focused flavor</li> <li>Linux Mint \u2013 standalone derivative based on Ubuntu LTS</li> </ul> <p>Study their branding choices, licensing compliance, and package management for guidance.</p>"},{"location":"linuxfilesystem/","title":"\ud83c\udf10 Linux Filesystem Overview for Custom ISO Creation","text":"<p>When creating a custom Ubuntu ISO using Cubic, it\u2019s essential to understand the Linux filesystem hierarchy. Each folder has a specific role, and knowing where to place or edit files ensures your custom ISO works reliably and efficiently.</p>"},{"location":"linuxfilesystem/#root","title":"\ud83c\udff0 Root (<code>/</code>)","text":"<ul> <li>Description: The root directory is the top-level directory of the Linux filesystem.</li> <li> <p>Role in Cubic:</p> </li> <li> <p>All other directories branch from here.</p> </li> <li>When you enter Cubic\u2019s chroot, you are inside <code>/</code>, seeing the ISO as the complete system.</li> <li>Tip: Never add files directly in <code>/</code> unless necessary. Always use the appropriate subdirectory.</li> </ul>"},{"location":"linuxfilesystem/#bin-essential-binaries","title":"\ud83d\udcc2 <code>/bin</code> \u2013 Essential Binaries","text":"<ul> <li>Contains: Core system programs used by all users (e.g., <code>ls</code>, <code>cp</code>, <code>bash</code>).</li> <li>Role in Cubic: Usually left untouched; only modify if adding fundamental system commands.</li> </ul>"},{"location":"linuxfilesystem/#etc-configuration-files","title":"\ud83d\udee0 <code>/etc</code> \u2013 Configuration Files","text":"<ul> <li>Contains: System-wide configuration files and settings.</li> <li> <p>Important Files for Custom ISO:</p> </li> <li> <p><code>/etc/lsb-release</code> \u2192 Defines OS name and version.</p> </li> <li><code>/etc/os-release</code> \u2192 System identification for applications and boot process.</li> <li> <p>Role in Cubic:</p> </li> <li> <p>Edit these files to rebrand your ISO and set default system configurations.</p> </li> </ul>"},{"location":"linuxfilesystem/#home-user-data","title":"\ud83c\udfe0 <code>/home</code> \u2013 User Data","text":"<ul> <li>Contains: Personal files and settings for each user.</li> <li> <p>Role in Cubic:</p> </li> <li> <p>Preconfigure <code>/etc/skel/</code> so that new users automatically inherit settings, themes, and extensions.</p> </li> <li>Tip: Don\u2019t store ISO-wide files here; use <code>/usr</code> or <code>/opt</code> instead.</li> </ul>"},{"location":"linuxfilesystem/#usr-user-programs-resources","title":"\ud83d\udce6 <code>/usr</code> \u2013 User Programs &amp; Resources","text":"<ul> <li>Contains: Applications, libraries, and shared resources.</li> <li> <p>Key Subdirectories:</p> </li> <li> <p><code>/usr/bin</code> \u2192 Programs and executables</p> </li> <li><code>/usr/lib</code> \u2192 Libraries required by programs</li> <li><code>/usr/share</code> \u2192 Shared resources (icons, wallpapers, applications, GNOME extensions)</li> <li> <p>Role in Cubic:</p> </li> <li> <p>Add custom apps, extensions, and themes here for system-wide availability.</p> </li> <li>Tip: Use <code>/usr/share/applications</code> for <code>.desktop</code> files to make apps appear in menus.</li> </ul>"},{"location":"linuxfilesystem/#var-variable-data","title":"\ud83d\uddc4 <code>/var</code> \u2013 Variable Data","text":"<ul> <li>Contains: Logs, caches, temporary files, and spool directories.</li> <li> <p>Role in Cubic:</p> </li> <li> <p>Clean <code>/var/cache/apt/archives</code> and <code>/var/log</code> before building ISO to reduce image size.</p> </li> </ul>"},{"location":"linuxfilesystem/#opt-optional-software","title":"\ud83c\udfdb <code>/opt</code> \u2013 Optional Software","text":"<ul> <li>Contains: Third-party or optional applications.</li> <li> <p>Role in Cubic:</p> </li> <li> <p>Ideal for bundling custom applications outside the package manager.</p> </li> </ul>"},{"location":"linuxfilesystem/#boot-boot-files","title":"\ud83d\uddbc <code>/boot</code> \u2013 Boot Files","text":"<ul> <li>Contains: Kernel, initial RAM disk, and bootloader configuration.</li> <li> <p>Role in Cubic:</p> </li> <li> <p>Customize GRUB splash images and boot parameters.</p> </li> <li>Ensure kernels match installed packages.</li> </ul>"},{"location":"linuxfilesystem/#lib-and-lib64-libraries","title":"\ud83e\udde9 <code>/lib</code> and <code>/lib64</code> \u2013 Libraries","text":"<ul> <li>Contains: Shared libraries required by system programs.</li> <li> <p>Role in Cubic:</p> </li> <li> <p>Usually left unchanged unless a specific program needs a custom library.</p> </li> </ul>"},{"location":"linuxfilesystem/#sbin-system-binaries","title":"\ud83d\udd27 <code>/sbin</code> \u2013 System Binaries","text":"<ul> <li>Contains: Administrative commands (e.g., <code>fsck</code>, <code>ifconfig</code>)</li> <li>Role in Cubic: Typically unchanged; important for live system utilities.</li> </ul>"},{"location":"linuxfilesystem/#tmp-temporary-files","title":"\ud83c\udff7 <code>/tmp</code> \u2013 Temporary Files","text":"<ul> <li>Contains: Temporary runtime files.</li> <li> <p>Role in Cubic:</p> </li> <li> <p>Clean before building ISO to keep image small.</p> </li> </ul>"},{"location":"linuxfilesystem/#dev-device-files","title":"\ud83d\udd0c <code>/dev</code> \u2013 Device Files","text":"<ul> <li>Contains: Device nodes (hard drives, USBs, etc.)</li> <li> <p>Role in Cubic:</p> </li> <li> <p>Automatically populated in live sessions. Usually not modified.</p> </li> </ul>"},{"location":"linuxfilesystem/#proc-and-sys-virtual-filesystems","title":"\ud83d\udcca <code>/proc</code> and <code>/sys</code> \u2013 Virtual Filesystems","text":"<ul> <li>Contains: System and kernel information (dynamic, not real files).</li> <li> <p>Role in Cubic:</p> </li> <li> <p>Provides runtime data. Not edited for customization.</p> </li> </ul>"},{"location":"linuxfilesystem/#summary-memory-aid","title":"\ud83e\udde9 Summary \u2013 Memory Aid","text":"<p>Think of Linux as a kingdom:</p> Folder Role in the Kingdom Cubic Use <code>/</code> The gate to the kingdom Base environment in chroot <code>/bin</code> Essential tools Usually untouched <code>/sbin</code> Admin tools Usually untouched <code>/etc</code> Council chambers (rules) Rebrand OS, configure defaults <code>/home</code> Villagers\u2019 homes Set default user configs via <code>/etc/skel/</code> <code>/usr</code> Marketplace Add apps, themes, GNOME extensions <code>/opt</code> Optional shops Bundle extra apps <code>/var</code> Storage vault Clean caches/logs to reduce ISO size <code>/boot</code> Royal gates Customize boot images and kernel <code>/lib</code> Library archive Usually untouched <code>/tmp</code> Temporary stalls Clean before building ISO"},{"location":"cubic/bootimage/","title":"Boot Image & GRUB","text":""},{"location":"cubic/bootimage/#grub-and-boot-splash-considerations-in-custom-ubuntu-isos","title":"\u26a0\ufe0f GRUB and Boot Splash Considerations in Custom Ubuntu ISOs","text":"<p>When building a custom Ubuntu-based ISO using Cubic, one of the legal and technical considerations involves the boot splash image and GRUB configuration. Ubuntu\u2019s default boot process includes branding (Lubuntu/Ubuntu logos) that you cannot redistribute without permission. Understanding how this works and how to handle it is essential.</p>"},{"location":"cubic/bootimage/#1-live-boot-vs-installed-system","title":"1\ufe0f\u20e3 Live Boot vs Installed System","text":"<ul> <li> <p>Live Boot:</p> </li> <li> <p>When the ISO is booted directly from media (USB/DVD), the GRUB loader shows the initial boot menu.</p> </li> <li>The first screen often includes the Ubuntu or Lubuntu splash screen.</li> <li> <p>Editing Plymouth themes inside the Cubic environment does not affect the live boot splash. The live system is still using the original Ubuntu branding.</p> </li> <li> <p>Installed System:</p> </li> <li> <p>Once the ISO is installed to disk, the changes you made in Plymouth and custom themes will apply.</p> </li> <li>The installed system can display your custom splash screen and branding.</li> </ul> <p>Key Takeaway: The first boot from live media will always show the default splash unless you intervene at the GRUB level.</p>"},{"location":"cubic/bootimage/#2-legal-workaround-removing-ubuntu-branding","title":"2\ufe0f\u20e3 Legal Workaround: Removing Ubuntu Branding","text":"<p>To avoid displaying Ubuntu branding during first boot, modify the GRUB configuration after exiting the Cubic virtual environment:</p> <p></p> <ol> <li>Open the GRUB configuration file in your <code>custom-root</code>:</li> </ol> <pre><code>custom-root/boot/grub/grub.cfg\n</code></pre> <ol> <li>Locate the kernel boot line that looks like this:</li> </ol> <pre><code>linux /vmlinuz ... quiet splash\n</code></pre> <ol> <li>Remove the <code>--quiet splash</code> options, leaving:</li> </ol> <pre><code>linux /vmlinuz ...\n</code></pre> <p>Effect:</p> <ul> <li>Disables the Ubuntu splash screen during live boot.</li> <li>Prevents legal issues related to redistribution of Ubuntu\u2019s branding.</li> <li>The system still boots normally, showing only textual output until installation.</li> </ul>"},{"location":"cubic/installing_tool/","title":"Installing Cubic","text":""},{"location":"cubic/installing_tool/#installation-notes-best-practices","title":"\ud83e\udde9 Installation Notes &amp; Best Practices","text":"<p> You can easily install Cubic using the default package manager of your base OS \u2014 for example, <code>apt</code> on Ubuntu or <code>dnf</code> on Fedora \u2014 by installing the <code>cubic</code> package or using the official PPA.</p> <p>When customizing your ISO:</p> <ul> <li>\ud83e\uddf9 Clean up after modifications \u2014 run <code>apt clean</code>, <code>autoremove</code>, and delete temporary files before building. This ensures your final ISO remains small and optimized.</li> <li>\u26a0\ufe0f Do not fully remove Snap \u2014 some Ubuntu installers and desktop dependencies rely on Snap. Removing it entirely can break the installer environment.</li> </ul>"},{"location":"cubic/iso_compression/","title":"ISO Compression","text":""},{"location":"cubic/iso_compression/#iso-compression-tips","title":"\ud83d\udcbe ISO Compression Tips","text":"<p> In Cubic, you can choose the ISO compression method for your custom build:</p> <ul> <li>Prototype / Testing Builds: Select the top option (fastest compression) to quickly generate ISOs for testing and iteration.</li> <li>Final / Release Builds: Select the bottom option (maximum compression) to produce a smaller, optimized ISO suitable for distribution.</li> </ul> <p>This ensures faster development cycles while keeping release images compact and efficient.</p>"},{"location":"custom-root/desktopicon/","title":"Desktop Icons","text":""},{"location":"custom-root/desktopicon/#adding-desktop-icons-for-new-users","title":"\ud83d\udda5 Adding Desktop Icons for New Users","text":"<p>When creating a custom Ubuntu-based ISO with Cubic, you can include preconfigured desktop icons so that new users immediately see them after account creation.</p>"},{"location":"custom-root/desktopicon/#1-location-for-desktop-icons","title":"1\ufe0f\u20e3 Location for Desktop Icons","text":"<ul> <li>Place your <code>.desktop</code> files in the <code>/etc/skel/Desktop/</code> directory of your <code>custom-root</code>:</li> </ul> <pre><code>custom-root/etc/skel/Desktop/\n</code></pre> <ul> <li> <p>Purpose:</p> </li> <li> <p>The <code>/etc/skel</code> directory acts as a template for new user accounts.</p> </li> <li>Any file or folder here is automatically copied into a new user\u2019s home directory (<code>~/Desktop</code>) when the account is created.</li> </ul>"},{"location":"custom-root/desktopicon/#2-file-format","title":"2\ufe0f\u20e3 File Format","text":"<ul> <li>Desktop icons are standard <code>.desktop</code> files.</li> <li>Example structure of a <code>.desktop</code> file:</li> </ul> <pre><code>[Desktop Entry]\nName=My App\nComment=Launch My App\nExec=/usr/bin/myapp\nIcon=/usr/share/icons/hicolor/48x48/apps/myapp.png\nTerminal=false\nType=Application\nCategories=Utility;\n</code></pre> <p>Tips:</p> <ul> <li>Ensure the <code>Exec</code> path points to the correct executable inside your ISO.</li> <li><code>Icon</code> should point to an image installed in the system (e.g., <code>/usr/share/icons/</code>).</li> <li>Use proper capitalization and <code>.desktop</code> file extension.</li> </ul>"},{"location":"custom-root/desktopicon/#3-displaying-the-icons","title":"3\ufe0f\u20e3 Displaying the Icons","text":"<ul> <li>Modern GNOME desktops require the Desktop extension to show icons on the desktop.</li> <li>Make sure your ISO includes \u201cDesktop Icons NG (DING)\u201d or a similar extension.</li> <li>Without it, users will not see any icons, even if the <code>.desktop</code> files are correctly placed.</li> </ul>"},{"location":"custom-root/extenstions/","title":"GNOME Extensions","text":""},{"location":"custom-root/extenstions/#installing-and-customizing-gnome-extensions-in-cubic","title":"\ud83e\udde9 Installing and Customizing GNOME Extensions in Cubic","text":"<p>When creating a custom Ubuntu-based ISO, you may want to include GNOME extensions that you normally use on your own system. However, there are several challenges:</p> <ol> <li> <p>Copying Extensions to the Custom ISO</p> </li> <li> <p>On your normal Ubuntu system, you installed all the extensions you wanted.</p> </li> <li> <p>System-wide extensions are usually in:</p> <pre><code>/usr/share/gnome-shell/extensions/\n</code></pre> </li> <li> <p>User-local extensions are in:</p> <pre><code>~/.local/share/gnome-shell/extensions/\n</code></pre> </li> <li> <p>To include these in your Cubic custom ISO, copy the desired folders into:</p> <pre><code>custom-root/usr/share/gnome-shell/extensions/\n</code></pre> </li> <li> <p>Important: Remove any preinstalled extensions that conflict with yours to avoid runtime errors.</p> </li> </ol> <ol> <li> <p>Extensions Do Not Load Automatically in Live ISO</p> </li> <li> <p>Simply copying the extension folder is not enough.</p> </li> <li> <p>The GNOME shell looks at override schemas in:</p> <pre><code>/usr/share/glib-2.0/schemas/\n</code></pre> </li> <li> <p>To enable your extension during live boot:</p> <ol> <li>Open or create an override schema file.</li> <li>Add entries for your extension identifiers.</li> <li> <p>Compile schemas with:</p> <pre><code>sudo glib-compile-schemas /usr/share/glib-2.0/schemas/\n</code></pre> </li> </ol> </li> <li> <p>This ensures the extension is recognized and loaded by GNOME in the live session.</p> </li> </ol> <ol> <li> <p>Extension Manager</p> </li> <li> <p>Include GNOME Extension Manager in your ISO to allow users to enable, disable, or configure extensions easily.</p> </li> </ol> <ol> <li> <p>Custom Preference Settings</p> </li> <li> <p>Some extensions store default preferences in GSettings schemas.</p> </li> <li> <p>To preserve your own preference settings:</p> <ul> <li>Locate the schema file inside the extension folder (e.g., <code>org.gnome.shell.extensions.&lt;name&gt;.gschema.xml</code>).</li> <li>Edit it to include your desired default values.</li> <li>Compile the schemas inside the ISO using <code>glib-compile-schemas</code>.</li> </ul> </li> <li> <p>Note: There is no fully automated way to copy your personal preferences from your system(well i dont know); editing the schema or extension code is the workaround.</p> </li> </ol>"},{"location":"custom-root/plymouth/","title":"Plymouth Boot & Login Images","text":""},{"location":"custom-root/plymouth/#customizing-plymouth-boot-login-images","title":"\ud83d\udd25 Customizing Plymouth Boot &amp; Login Images","text":"<p>Plymouth is the graphical boot system used in Ubuntu-based distributions. It displays splash screens during boot and can also affect the login screen background in some configurations. Customizing Plymouth is essential when creating a branded ISO with Cubic.</p>"},{"location":"custom-root/plymouth/#1-location-of-plymouth-files","title":"1\ufe0f\u20e3 Location of Plymouth Files","text":"<ul> <li>Plymouth files are stored in:</li> </ul> <pre><code>/usr/share/plymouth/\n</code></pre> <ul> <li> <p>Inside, you will find:</p> </li> <li> <p>Themes: <code>themes/</code> directory contains theme definitions, including logos, spinners, and watermarks.</p> </li> <li>Boot images: Images used during startup are stored inside specific theme folders.</li> </ul> <p>Example structure:</p> <pre><code>/usr/share/plymouth/themes/&lt;theme-name&gt;/\n\u251c\u2500\u2500 &lt;theme-name&gt;.plymouth      # Theme configuration file\n\u251c\u2500\u2500 spinner/                   # Animation frames\n\u251c\u2500\u2500 watermark/                 # Image file (often includes Ubuntu logo)\n\u2514\u2500\u2500 other resources            # Fonts, scripts, etc.\n</code></pre>"},{"location":"custom-root/plymouth/#2-replacing-the-logo-boot-image","title":"2\ufe0f\u20e3 Replacing the Logo / Boot Image","text":"<ul> <li>Locate the watermark or logo image inside the theme folder.</li> <li>Replace it with your custom image using the same filename to avoid editing the theme configuration:</li> </ul> <pre><code>sudo cp my-logo.png /usr/share/plymouth/themes/&lt;theme-name&gt;/watermark/ubuntu-logo.png\n</code></pre> <ul> <li>If you want, you can also edit the theme\u2019s <code>.plymouth</code> file to point to a new image filename.</li> </ul>"},{"location":"custom-root/plymouth/#3-effect-on-boot-and-login-screens","title":"3\ufe0f\u20e3 Effect on Boot and Login Screens","text":"<ul> <li> <p>Boot Splash Screen:</p> </li> <li> <p>Appears when the system starts, before the login screen.</p> </li> <li> <p>Controlled entirely by Plymouth theme.</p> </li> <li> <p>Login Screen (GDM/LightDM):</p> </li> <li> <p>May use the same theme or image as Plymouth.</p> </li> <li>By customizing the Plymouth theme, the login screen background often reflects your branding.</li> </ul>"},{"location":"custom-root/wallpaper/","title":"Wallpapers","text":""},{"location":"custom-root/wallpaper/#customizing-default-wallpapers-in-ubuntu-based-isos","title":"\ud83c\udf04 Customizing Default Wallpapers in Ubuntu-Based ISOs","text":"<p>When building a custom Ubuntu-based ISO using Cubic, you may want to replace default system wallpapers. These wallpapers are often included for branding purposes, so understanding their location, XML configuration, and licensing is critical.</p>"},{"location":"custom-root/wallpaper/#1-wallpaper-locations","title":"1\ufe0f\u20e3 Wallpaper Locations","text":"<ul> <li>Default wallpapers are stored in:</li> </ul> <pre><code>/usr/share/backgrounds/\n</code></pre> <ul> <li> <p>You may see several images here, often representing:</p> </li> <li> <p>Ubuntu official wallpapers (e.g., \u201cubuntu-24.04.jpg\u201d)</p> </li> <li>Freely licensed wallpapers (e.g., \u201cNoble.jpg\u201d or \u201cFocal-Landscape.jpg\u201d)</li> </ul> <p>Tip: Only replace wallpapers that are freely redistributable to avoid licensing issues.</p>"},{"location":"custom-root/wallpaper/#2-xml-mapping-files","title":"2\ufe0f\u20e3 XML Mapping Files","text":"<ul> <li>Wallpapers are often referenced in XML files located nearby, usually in:</li> </ul> <pre><code>/usr/share/gnome-background-properties/\n</code></pre> <ul> <li> <p>Example files:</p> </li> <li> <p><code>ubuntu-wallpapers.xml</code> \u2192 maps the default Ubuntu wallpapers</p> </li> <li><code>noble-wallpapers.xml</code> \u2192 maps freely licensed wallpapers</li> </ul> <p>Purpose of XML:</p> <ul> <li> <p>Each XML file defines metadata for the wallpapers, including:</p> </li> <li> <p>File path</p> </li> <li>Name (human-readable)</li> <li>Type (Light, Dark, or Grey mode)</li> <li>Default selection</li> </ul>"},{"location":"custom-root/wallpaper/#3-editing-wallpapers-safely","title":"3\ufe0f\u20e3 Editing Wallpapers Safely","text":"<p>There are two ways to replace wallpapers while keeping system behavior intact:</p>"},{"location":"custom-root/wallpaper/#option-a-keep-the-xml-filename-and-replace-the-image","title":"Option A: Keep the XML Filename and Replace the Image","text":"<ol> <li>Identify the image you want to replace (e.g., <code>ubuntu-wallpaper.jpg</code>)</li> <li>Prepare your custom image with the same filename.</li> <li>Replace the original file in <code>/usr/share/backgrounds/</code>:</li> </ol> <pre><code>sudo cp my-wallpaper.jpg /usr/share/backgrounds/ubuntu-wallpaper.jpg\n</code></pre> <p>Effect:</p> <ul> <li>XML mapping does not need to be edited.</li> <li>The system will display your custom image while keeping Light/Dark/Grey modes intact.</li> </ul>"},{"location":"custom-root/wallpaper/#option-b-edit-the-xml-file","title":"Option B: Edit the XML File","text":"<ol> <li>Open the XML file (e.g., <code>ubuntu-wallpapers.xml</code>) in a text editor:</li> </ol> <pre><code>sudo nano /usr/share/gnome-background-properties/ubuntu-wallpapers.xml\n</code></pre> <ol> <li> <p>Find the <code>&lt;wallpaper&gt;</code> entries and modify:</p> </li> <li> <p><code>&lt;name&gt;</code> \u2192 human-readable label (optional)</p> </li> <li><code>&lt;filename&gt;</code> \u2192 path to your custom image</li> </ol> <p>Example:</p> <pre><code>&lt;wallpaper&gt;\n    &lt;name&gt;My Custom Wallpaper&lt;/name&gt;\n    &lt;filename&gt;/usr/share/backgrounds/my-wallpaper.jpg&lt;/filename&gt;\n    &lt;options&gt;zoom&lt;/options&gt;\n    &lt;pcolor&gt;#000000&lt;/pcolor&gt;\n    &lt;scolor&gt;#FFFFFF&lt;/scolor&gt;\n    &lt;shade_type&gt;solid&lt;/shade_type&gt;\n&lt;/wallpaper&gt;\n</code></pre> <p>Effect:</p> <ul> <li>You can rename wallpapers, add multiple modes, and assign custom metadata.</li> <li>Allows full control over Light, Dark, and Grey modes.</li> </ul>"},{"location":"custom-root/wallpaper/#4-supporting-multiple-modes-lightdarkgrey","title":"4\ufe0f\u20e3 Supporting Multiple Modes (Light/Dark/Grey)","text":"<ul> <li> <p>Modern Ubuntu and GNOME desktops support three modes:</p> </li> <li> <p>Light Mode \u2192 default wallpaper for bright themes</p> </li> <li>Dark Mode \u2192 used when the system switches to a dark theme</li> <li>Grey/Neutral Mode \u2192 sometimes used for login screens or lock screens</li> </ul>"}]}